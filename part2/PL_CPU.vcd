$date
	Wed Jan 26 16:57:47 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module PL_CPU $end
$var wire 64 ! write_data [63:0] $end
$var wire 64 " sum_data [63:0] $end
$var wire 4 # result [3:0] $end
$var wire 1 $ reg_write $end
$var wire 64 % read_data2 [63:0] $end
$var wire 64 & read_data1 [63:0] $end
$var wire 64 ' read_data [63:0] $end
$var wire 64 ( pcplus4 [63:0] $end
$var wire 64 ) out_data [63:0] $end
$var wire 64 * old_pc [63:0] $end
$var wire 64 + new_pc [63:0] $end
$var wire 1 , mem_write $end
$var wire 1 - mem_to_reg $end
$var wire 1 . mem_read $end
$var wire 32 / instruction [31:0] $end
$var wire 1 0 clk $end
$var wire 1 1 branch $end
$var wire 1 2 alu_zero $end
$var wire 64 3 alu_src_mux_output [63:0] $end
$var wire 1 4 alu_src $end
$var wire 2 5 alu_op [1:0] $end
$var wire 64 6 address [63:0] $end
$var wire 135 7 MEMWB_output [134:0] $end
$var wire 96 8 IFID_output [95:0] $end
$var wire 272 9 IDEX_output [271:0] $end
$var wire 203 : EXMEM_output [202:0] $end
$var reg 1 ; pc_reset $end
$var reg 1 < pc_write $end
$scope module add $end
$var wire 64 = b [63:0] $end
$var wire 64 > sum [63:0] $end
$var wire 64 ? carry [63:0] $end
$var wire 64 @ a [63:0] $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 64 A a [63:0] $end
$var wire 64 B b [63:0] $end
$var wire 64 C sum [63:0] $end
$var wire 64 D carry [63:0] $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope begin genblk1[32] $end
$upscope $end
$scope begin genblk1[33] $end
$upscope $end
$scope begin genblk1[34] $end
$upscope $end
$scope begin genblk1[35] $end
$upscope $end
$scope begin genblk1[36] $end
$upscope $end
$scope begin genblk1[37] $end
$upscope $end
$scope begin genblk1[38] $end
$upscope $end
$scope begin genblk1[39] $end
$upscope $end
$scope begin genblk1[40] $end
$upscope $end
$scope begin genblk1[41] $end
$upscope $end
$scope begin genblk1[42] $end
$upscope $end
$scope begin genblk1[43] $end
$upscope $end
$scope begin genblk1[44] $end
$upscope $end
$scope begin genblk1[45] $end
$upscope $end
$scope begin genblk1[46] $end
$upscope $end
$scope begin genblk1[47] $end
$upscope $end
$scope begin genblk1[48] $end
$upscope $end
$scope begin genblk1[49] $end
$upscope $end
$scope begin genblk1[50] $end
$upscope $end
$scope begin genblk1[51] $end
$upscope $end
$scope begin genblk1[52] $end
$upscope $end
$scope begin genblk1[53] $end
$upscope $end
$scope begin genblk1[54] $end
$upscope $end
$scope begin genblk1[55] $end
$upscope $end
$scope begin genblk1[56] $end
$upscope $end
$scope begin genblk1[57] $end
$upscope $end
$scope begin genblk1[58] $end
$upscope $end
$scope begin genblk1[59] $end
$upscope $end
$scope begin genblk1[60] $end
$upscope $end
$scope begin genblk1[61] $end
$upscope $end
$scope begin genblk1[62] $end
$upscope $end
$scope begin genblk1[63] $end
$upscope $end
$upscope $end
$scope module alu $end
$var wire 64 E in1 [63:0] $end
$var wire 64 F in2 [63:0] $end
$var wire 4 G alu_c [3:0] $end
$var reg 64 H result [63:0] $end
$var reg 1 2 zero $end
$upscope $end
$scope module aluc $end
$var wire 2 I alu_op [1:0] $end
$var wire 3 J func3 [2:0] $end
$var wire 7 K func7 [6:0] $end
$var reg 12 L a [11:0] $end
$var reg 4 M result [3:0] $end
$upscope $end
$scope module cu $end
$var wire 7 N opcode [6:0] $end
$var reg 2 O alu_op [1:0] $end
$var reg 1 4 alu_src $end
$var reg 1 1 branch $end
$var reg 1 . mem_read $end
$var reg 1 - mem_to_reg $end
$var reg 1 , mem_write $end
$var reg 1 $ reg_write $end
$upscope $end
$scope module instruction_memory $end
$var wire 32 P data_in [31:0] $end
$var wire 1 ; enable $end
$var wire 1 Q read $end
$var wire 64 R address [63:0] $end
$var reg 32 S data_out [31:0] $end
$upscope $end
$scope module mux $end
$var wire 64 T data1 [63:0] $end
$var wire 64 U data2 [63:0] $end
$var wire 1 V s $end
$var reg 64 W data_out [63:0] $end
$var integer 32 X i [31:0] $end
$upscope $end
$scope module mux2 $end
$var wire 64 Y data1 [63:0] $end
$var wire 64 Z data2 [63:0] $end
$var wire 1 [ s $end
$var wire 64 \ data_out [63:0] $end
$upscope $end
$scope module mux3 $end
$var wire 64 ] data1 [63:0] $end
$var wire 64 ^ data2 [63:0] $end
$var wire 1 _ s $end
$var wire 64 ` data_out [63:0] $end
$upscope $end
$scope module myclock $end
$var reg 1 0 CLK $end
$upscope $end
$scope module myimmgen $end
$var wire 32 a input1 [31:0] $end
$var reg 64 b output1 [63:0] $end
$upscope $end
$scope module pc $end
$var wire 1 0 Clk $end
$var wire 1 ; En $end
$var wire 1 < Read $end
$var wire 64 c in [63:0] $end
$var reg 64 d memory [63:0] $end
$var reg 64 e out [63:0] $end
$var integer 32 f i [31:0] $end
$upscope $end
$scope module regfile $end
$var wire 1 0 Clk $end
$var wire 1 ; En $end
$var wire 5 g read_reg1 [4:0] $end
$var wire 5 h read_reg2 [4:0] $end
$var wire 1 i reg_write $end
$var wire 64 j write_data [63:0] $end
$var wire 5 k write_reg [4:0] $end
$var reg 64 l read_data1 [63:0] $end
$var reg 64 m read_data2 [63:0] $end
$var integer 32 n k [31:0] $end
$upscope $end
$scope module register1 $end
$var wire 1 0 Clk $end
$var wire 1 ; En $end
$var wire 1 < Read $end
$var wire 96 o in [95:0] $end
$var reg 96 p memory [95:0] $end
$var reg 96 q out [95:0] $end
$var integer 32 r i [31:0] $end
$upscope $end
$scope module register2 $end
$var wire 1 0 Clk $end
$var wire 1 ; En $end
$var wire 1 < Read $end
$var wire 272 s in [271:0] $end
$var reg 272 t memory [271:0] $end
$var reg 272 u out [271:0] $end
$var integer 32 v i [31:0] $end
$upscope $end
$scope module register3 $end
$var wire 1 0 Clk $end
$var wire 1 ; En $end
$var wire 1 < Read $end
$var wire 203 w in [202:0] $end
$var reg 203 x memory [202:0] $end
$var reg 203 y out [202:0] $end
$var integer 32 z i [31:0] $end
$upscope $end
$scope module register4 $end
$var wire 1 0 Clk $end
$var wire 1 ; En $end
$var wire 1 < Read $end
$var wire 135 { in [134:0] $end
$var reg 135 | memory [134:0] $end
$var reg 135 } out [134:0] $end
$var integer 32 ~ i [31:0] $end
$upscope $end
$scope module uut $end
$var wire 1 0 Clk $end
$var wire 1 ; En $end
$var wire 64 !" address [63:0] $end
$var wire 1 "" memRead $end
$var wire 1 #" memWrite $end
$var wire 64 $" write_data [63:0] $end
$var reg 64 %" read_data [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx %"
bx $"
x#"
x""
bx !"
b0 ~
bx }
bx |
bx {
b0 z
bx y
bx x
bx w
b0 v
bx u
bx t
bx s
b0 r
bx q
bx p
bx o
b1000000 n
bx m
bx l
bx k
bx j
xi
bx h
bx g
b0 f
bx e
bx d
b0 c
bx b
bx a
bx `
x_
bx ^
bx ]
bx \
x[
bx Z
bx Y
b1 X
b0 W
xV
bx U
bx T
bx S
bx R
1Q
b0 P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx00 ?
bx >
b100 =
1<
1;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
x4
bx 3
x2
x1
00
bx /
x.
x-
x,
b0 +
bx *
bx )
bx (
bx '
bx &
bx %
x$
bx #
bx "
bx !
$end
#20
b0 ?
b0 "
b0 C
b0 D
b100 (
b100 >
b100 T
12
b0 6
b0 H
b0 3
b0 F
b0 \
b10 #
b10 G
b10 M
b0 L
0V
b101 X
b100 +
b100 W
b100 c
b0 !
b0 `
b0 j
b1010010101000000011 /
b1010010101000000011 S
b0 K
bx0000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000 s
b0 N
b0 a
b0 h
b0 g
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 w
b0 E
0[
b0 Z
b0 Y
b0 I
b0 J
b0 B
b0 A
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000 {
0#"
0""
b0 $"
b0 !"
b0 U
0_
b0 ^
b0 ]
0i
b0 k
b1 f
b1010010101000000011 o
b0 *
b0 @
b0 R
b0 e
b1 r
b0 8
b0 q
b1 v
b0 9
b0 u
b1 z
b0 :
b0 y
b1 ~
b0 7
b0 }
10
#40
00
#60
b100 ?
b111 X
b1000 +
b1000 W
b1000 c
x2
bx 6
bx H
bx "
bx C
b1000 (
b1000 >
b1000 T
bx 3
bx F
bx \
bx0000000000 L
b0 5
b0 O
1$
14
0,
1-
1.
01
b0 )
b0 b
bx ^
bx000000000000000000000000000000000000000000000000000000000000000000000 w
x[
bx Z
bx I
bx A
b11 N
b1010010101000000011 a
b1010 g
b1010000000000101010110011 /
b1010000000000101010110011 S
b10 ~
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000 7
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000 }
b10 z
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 :
b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 y
b10 v
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000 9
bx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000 u
b0 %
b0 m
b11010001000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100 s
b0 &
b0 l
b10 r
b10000000000000001010010101000000011 8
b10000000000000001010010101000000011 q
b10 f
b10000000001010000000000101010110011 o
b100 *
b100 @
b100 R
b100 e
10
#80
00
#100
b0 ?
b1100 (
b1100 >
b1100 T
12
b0 6
b0 H
b100 "
b100 C
bx +
bx W
bx c
b10 5
b10 O
04
0-
0.
b0 3
b0 F
b0 \
b100000001 L
xV
b1100 X
b100001010010101000001100110011 /
b100001010010101000001100110011 S
b1 K
b10000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 s
b110011 N
b1010000000000101010110011 a
b10100 h
b0 g
b11010000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100 w
1[
b0 Z
b0 I
b10 J
b100 B
b0 A
bx00000 {
x#"
x""
bx !"
bx U
b11 f
b100000100001010010101000001100110011 o
b1000 *
b1000 @
b1000 R
b1000 e
b11 r
b10000000001010000000000101010110011 8
b10000000001010000000000101010110011 q
b11 v
b11010001000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100 9
b11010001000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100 u
b11 z
bx000000000000000000000000000000000000000000000000000000000000000000000 :
bx000000000000000000000000000000000000000000000000000000000000000000000 y
b11 ~
10
#120
00
#140
bx00 ?
bx !
bx `
bx j
0V
b1110 X
bx +
bx W
bx c
b100000100001 L
bx (
bx >
bx T
x_
bx ]
xi
b11xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000010100 {
0#"
1""
b0 !"
b100 U
b10000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 w
0[
b10 I
b0 J
b100001 K
b10000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 s
b100001010010101000001100110011 a
b10101 g
bx /
bx S
b100 ~
bx00000 7
bx00000 }
b100 z
b11010000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100 :
b11010000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100 y
b100 v
b10000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 9
b10000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 u
b100 r
bx00100001010010101000001100110011 8
bx00100001010010101000001100110011 q
b100 f
bx o
bx *
bx @
bx R
bx e
10
#160
00
#180
bx "
bx C
b10000xxxxxxx L
bx K
b10000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000xxxxxxxx s
bx N
bx a
bx h
bx g
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 w
bx B
0""
1_
b0 ]
1i
b10100 k
b101 f
b101 r
bx 8
bx q
b101 v
b10000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 9
b10000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 u
b101 z
b10000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 :
b10000000000000000000000000000000000000000000000000000000000000000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 y
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 {
b0 '
b0 %"
b101 ~
b11xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000010100 7
b11xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000000000000000000000000000000000000000000000000000000000010100 }
10
#200
00
#220
b0 !
b0 `
b0 j
b1111 X
x2
bx 6
bx H
bx 3
bx F
bx \
b0 #
b0 G
b0 M
b10xxxxxxxxxx L
0_
b0 ^
b10101 k
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 {
bx U
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx w
bx E
bx Y
bx J
b110 ~
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 7
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101 }
b110 z
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 :
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 y
b110 v
b10000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000xxxxxxxx 9
b10000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000xxxxxxxx u
bx %
bx m
b10000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0000000000000000000000000000000000000000000000000000000000000000xxxxxxxx s
bx &
bx l
b110 r
b110 f
10
#240
00
#260
b100000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {
bx $"
bx !"
b110 k
b111 f
b111 r
b111 v
b111 z
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx :
b10000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx y
b111 ~
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 7
b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110 }
10
#280
00
#300
bx !
bx `
bx j
bx ]
bx k
b1000 ~
b100000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 7
b100000000000000000000000000000000000000000000000000000000000000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx }
b1000 z
b1000 v
b1000 r
b1000 f
10
#320
00
#340
b1001 f
b1001 r
b1001 v
b1001 z
b1001 ~
10
#360
00
#380
b1010 ~
b1010 z
b1010 v
b1010 r
b1010 f
10
#400
00
#420
b1011 f
b1011 r
b1011 v
b1011 z
b1011 ~
10
#440
00
#460
b1100 ~
b1100 z
b1100 v
b1100 r
b1100 f
10
#480
00
#500
b1101 f
b1101 r
b1101 v
b1101 z
b1101 ~
10
#520
00
#540
b1110 ~
b1110 z
b1110 v
b1110 r
b1110 f
10
#560
00
#580
b1111 f
b1111 r
b1111 v
b1111 z
b1111 ~
10
#600
00
#620
b10000 ~
b10000 z
b10000 v
b10000 r
b10000 f
10
#640
00
#660
b10001 f
b10001 r
b10001 v
b10001 z
b10001 ~
10
#680
00
#700
b10010 ~
b10010 z
b10010 v
b10010 r
b10010 f
10
#720
00
#740
b10011 f
b10011 r
b10011 v
b10011 z
b10011 ~
10
#760
00
#780
b10100 ~
b10100 z
b10100 v
b10100 r
b10100 f
10
#800
00
#820
b10101 f
b10101 r
b10101 v
b10101 z
b10101 ~
10
#840
00
#860
b10110 ~
b10110 z
b10110 v
b10110 r
b10110 f
10
#880
00
#900
b10111 f
b10111 r
b10111 v
b10111 z
b10111 ~
10
#920
00
#940
b11000 ~
b11000 z
b11000 v
b11000 r
b11000 f
10
#960
00
#980
b11001 f
b11001 r
b11001 v
b11001 z
b11001 ~
10
#1000
00
#1020
b11010 ~
b11010 z
b11010 v
b11010 r
b11010 f
10
#1040
00
#1060
b11011 f
b11011 r
b11011 v
b11011 z
b11011 ~
10
#1080
00
#1100
b11100 ~
b11100 z
b11100 v
b11100 r
b11100 f
10
#1120
00
#1140
b11101 f
b11101 r
b11101 v
b11101 z
b11101 ~
10
#1160
00
#1180
b11110 ~
b11110 z
b11110 v
b11110 r
b11110 f
10
#1200
00
#1220
b11111 f
b11111 r
b11111 v
b11111 z
b11111 ~
10
#1240
00
#1260
b100000 ~
b100000 z
b100000 v
b100000 r
b100000 f
10
#1280
00
#1300
b100001 f
b100001 r
b100001 v
b100001 z
b100001 ~
10
#1320
00
#1340
b100010 ~
b100010 z
b100010 v
b100010 r
b100010 f
10
#1360
00
#1380
b100011 f
b100011 r
b100011 v
b100011 z
b100011 ~
10
#1400
00
#1420
b100100 ~
b100100 z
b100100 v
b100100 r
b100100 f
10
#1440
00
#1460
b100101 f
b100101 r
b100101 v
b100101 z
b100101 ~
10
#1480
00
#1500
b100110 ~
b100110 z
b100110 v
b100110 r
b100110 f
10
#1520
00
#1540
b100111 f
b100111 r
b100111 v
b100111 z
b100111 ~
10
#1560
00
#1580
b101000 ~
b101000 z
b101000 v
b101000 r
b101000 f
10
#1600
00
#1620
b101001 f
b101001 r
b101001 v
b101001 z
b101001 ~
10
#1640
00
#1660
b101010 ~
b101010 z
b101010 v
b101010 r
b101010 f
10
#1680
00
#1700
b101011 f
b101011 r
b101011 v
b101011 z
b101011 ~
10
#1720
00
#1740
b101100 ~
b101100 z
b101100 v
b101100 r
b101100 f
10
#1760
00
#1780
b101101 f
b101101 r
b101101 v
b101101 z
b101101 ~
10
#1800
00
#1820
b101110 ~
b101110 z
b101110 v
b101110 r
b101110 f
10
#1840
00
#1860
b101111 f
b101111 r
b101111 v
b101111 z
b101111 ~
10
#1880
00
#1900
b110000 ~
b110000 z
b110000 v
b110000 r
b110000 f
10
#1920
00
#1940
b110001 f
b110001 r
b110001 v
b110001 z
b110001 ~
10
#1960
00
#1980
b110010 ~
b110010 z
b110010 v
b110010 r
b110010 f
10
#2000
00
#2020
b110011 f
b110011 r
b110011 v
b110011 z
b110011 ~
10
#2040
00
#2060
b110100 ~
b110100 z
b110100 v
b110100 r
b110100 f
10
#2080
00
#2100
b110101 f
b110101 r
b110101 v
b110101 z
b110101 ~
10
#2120
00
#2140
b110110 ~
b110110 z
b110110 v
b110110 r
b110110 f
10
#2160
00
#2180
b110111 f
b110111 r
b110111 v
b110111 z
b110111 ~
10
#2200
00
#2220
b111000 ~
b111000 z
b111000 v
b111000 r
b111000 f
10
#2240
00
#2260
b111001 f
b111001 r
b111001 v
b111001 z
b111001 ~
10
#2280
00
#2300
b111010 ~
b111010 z
b111010 v
b111010 r
b111010 f
10
#2320
00
#2340
b111011 f
b111011 r
b111011 v
b111011 z
b111011 ~
10
#2360
00
#2380
b111100 ~
b111100 z
b111100 v
b111100 r
b111100 f
10
#2400
00
#2420
b111101 f
b111101 r
b111101 v
b111101 z
b111101 ~
10
#2440
00
#2460
b111110 ~
b111110 z
b111110 v
b111110 r
b111110 f
10
#2480
00
#2500
b111111 f
b111111 r
b111111 v
b111111 z
b111111 ~
10
