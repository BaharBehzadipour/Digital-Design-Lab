$date
	Fri Dec 24 14:56:01 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Register64_tb $end
$var wire 64 ! out [63:0] $end
$var reg 1 " Clk $end
$var reg 1 # En $end
$var reg 1 $ Read $end
$var reg 64 % in [63:0] $end
$scope module uut $end
$var wire 1 " Clk $end
$var wire 1 # En $end
$var wire 1 $ Read $end
$var wire 64 & in [63:0] $end
$var reg 64 ' memory [63:0] $end
$var reg 64 ( out [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx (
bx '
bx &
bx %
x$
x#
x"
bx !
$end
#40
0"
1#
0$
b1011001 %
b1011001 &
#60
b1011001 !
b1011001 (
1"
1$
#80
0"
0#
b100101 %
b100101 &
#100
1"
#120
0"
1#
#140
b100101 !
b100101 (
1"
#160
0"
#180
b100101 '
1"
0$
#200
0"
#220
